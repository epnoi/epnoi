<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.epnoi</groupId>
		<artifactId>epnoi</artifactId>
		<version>0.1-SNAPSHOT</version>
	</parent>

	<artifactId>epnoi-hoarder</artifactId>
	<packaging>war</packaging>
	<name>epnoi hoarder</name>
	<description>epnoi hoarder</description>

	<build>
		<finalName>hoarder</finalName>
		<plugins>
			<!-- WAR -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>${maven.war.plugin.version}</version>
				<configuration>
					<warName>${project.build.finalName}</warName>
					<webResources>
						<resource>
							<directory>src/main/webapp/META-INF</directory>
							<filtering>true</filtering>
							<targetPath>META-INF</targetPath>
						</resource>
					</webResources>
				</configuration>
			</plugin>

			<!-- Attached JAR -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven.jar.plugin.version}</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<classifier>lib</classifier>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Copy Web Resources to target/classes but also to target/swagger-ui -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven.resources.plugin.version}</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/classes/</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/webapp</directory>
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-test-resources</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/jetty-classes/</outputDirectory>
							<overwrite>true</overwrite>
							<resources>
								<resource>
									<directory>${basedir}/target/classes/</directory>
									<filtering>false</filtering>
								</resource>
								<resource>
									<directory>src/test/webapp</directory>
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- allows running this example with mvn jetty:run -->
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${jetty.plugin.version}</version>
				<configuration>
					<webAppSourceDirectory>target/jetty-classes</webAppSourceDirectory>
					<webAppConfig>
					    <contextPath>/hoarder</contextPath>
					</webAppConfig>
				</configuration>
			</plugin>

		</plugins>
	</build>

	<dependencies>

		<!-- Internal Dependencies -->
		<dependency>
			<groupId>org.epnoi</groupId>
			<artifactId>epnoi-core</artifactId>
			<version>${project.version}</version>
			<exclusions>
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>servlet-api</artifactId>
				</exclusion>
				<!-- logging libraries -->
				<exclusion>
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Support for the “Advanced Message Queuing Protocol” via spring-rabbit -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-amqp</artifactId>
			<exclusions>
				<exclusion>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-classic</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Import Spring Boot’s default logging framework (Logback) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-logging</artifactId>
			<!--<exclusions>-->
				<!--<exclusion>-->
					<!--<groupId>ch.qos.logback</groupId>-->
					<!--<artifactId>logback-classic</artifactId>-->
				<!--</exclusion>-->
			<!--</exclusions>-->
		</dependency>

		<!-- Spring Web -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
		</dependency>

		<!-- Apache Camel context -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-spring</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-groovy</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-script</artifactId>
		</dependency>

		<!-- Camel Saxon for XPath 2.0 -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-saxon</artifactId>
		</dependency>

		<!-- Apache Camel RSS component -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-rss</artifactId>
		</dependency>

		<!-- Apache Camel HTTP component -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-http</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-servlet</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-metrics</artifactId>
		</dependency>

		<!-- Apache Camel Stream component -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-stream</artifactId>
		</dependency>

		<!-- Apache Camel swagger api -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-swagger</artifactId>
		</dependency>

		<!-- Apache Camel content binding -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-jackson</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-jaxb</artifactId>
		</dependency>

		<!-- Parse RSS Content -->
		<dependency>
			<groupId>org.apache.tika</groupId>
			<artifactId>tika-core</artifactId>
			<!--<classifier>jdk14</classifier>-->
		</dependency>
		<dependency>
			<groupId>org.apache.tika</groupId>
			<artifactId>tika-parsers</artifactId>
		<!--	<classifier>jdk14</classifier>-->
		</dependency>

		<!-- Camel OAI-PMH Component -->
		<dependency>
			<groupId>es.upm.oeg.camel</groupId>
			<artifactId>camel-oaipmh</artifactId>
		</dependency>

		<!-- Camel Epnoi UIA Component -->
		<dependency>
			<groupId>es.upm.oeg.camel</groupId>
			<artifactId>camel-euia</artifactId>
		</dependency>

		<!-- Google Guava Library -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
		</dependency>

		<!-- TEST: Camel  -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- TEST: Jetty Embedded Server -->
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-server</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlets</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-webapp</artifactId>
			<scope>test</scope>
		</dependency>


	</dependencies>


	<repositories>
		<!-- GitHub Camel-OAIPMH Repository -->
		<repository>
			<id>camel-oaipmh-mvn-repo</id>
			<url>https://raw.github.com/cbadenes/camel-oaipmh/mvn-repo/</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
			</snapshots>
		</repository>
		<!-- GitHub Camel-EUIA Repository -->
		<repository>
			<id>camel-euia-mvn-repo</id>
			<url>https://raw.github.com/cbadenes/camel-euia/mvn-repo/</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
			</snapshots>
		</repository>
	</repositories>

</project>

